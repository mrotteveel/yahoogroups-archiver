/*
 * This file is generated by jOOQ.
 */
package nl.lawinegevaar.yahoogroups.database.jooq;


import nl.lawinegevaar.yahoogroups.database.jooq.tables.Dbversion;
import nl.lawinegevaar.yahoogroups.database.jooq.tables.LinkInfo;
import nl.lawinegevaar.yahoogroups.database.jooq.tables.Rawdata;
import nl.lawinegevaar.yahoogroups.database.jooq.tables.Ygroup;
import nl.lawinegevaar.yahoogroups.database.jooq.tables.records.DbversionRecord;
import nl.lawinegevaar.yahoogroups.database.jooq.tables.records.LinkInfoRecord;
import nl.lawinegevaar.yahoogroups.database.jooq.tables.records.RawdataRecord;
import nl.lawinegevaar.yahoogroups.database.jooq.tables.records.YgroupRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in the
 * default schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<DbversionRecord> PK_DBVERSION = Internal.createUniqueKey(Dbversion.DBVERSION, DSL.name("PK_DBVERSION"), new TableField[] { Dbversion.DBVERSION.VERSION }, true);
    public static final UniqueKey<LinkInfoRecord> PK_LINK_INFO = Internal.createUniqueKey(LinkInfo.LINK_INFO, DSL.name("PK_LINK_INFO"), new TableField[] { LinkInfo.LINK_INFO.GROUP_ID, LinkInfo.LINK_INFO.MESSAGE_ID }, true);
    public static final UniqueKey<RawdataRecord> PK_RAWDATA = Internal.createUniqueKey(Rawdata.RAWDATA, DSL.name("PK_RAWDATA"), new TableField[] { Rawdata.RAWDATA.GROUP_ID, Rawdata.RAWDATA.MESSAGE_ID }, true);
    public static final UniqueKey<YgroupRecord> PK_YGROUP = Internal.createUniqueKey(Ygroup.YGROUP, DSL.name("PK_YGROUP"), new TableField[] { Ygroup.YGROUP.ID }, true);
    public static final UniqueKey<YgroupRecord> UQ_YGROUP_NAME = Internal.createUniqueKey(Ygroup.YGROUP, DSL.name("UQ_YGROUP_NAME"), new TableField[] { Ygroup.YGROUP.GROUPNAME }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<LinkInfoRecord, RawdataRecord> FK_LINK_INFO_RAWDATA = Internal.createForeignKey(LinkInfo.LINK_INFO, DSL.name("FK_LINK_INFO_RAWDATA"), new TableField[] { LinkInfo.LINK_INFO.GROUP_ID, LinkInfo.LINK_INFO.MESSAGE_ID }, Keys.PK_RAWDATA, new TableField[] { Rawdata.RAWDATA.GROUP_ID, Rawdata.RAWDATA.MESSAGE_ID }, true);
    public static final ForeignKey<RawdataRecord, YgroupRecord> FK_RAWDATA_YGROUP = Internal.createForeignKey(Rawdata.RAWDATA, DSL.name("FK_RAWDATA_YGROUP"), new TableField[] { Rawdata.RAWDATA.GROUP_ID }, Keys.PK_YGROUP, new TableField[] { Ygroup.YGROUP.ID }, true);
}
