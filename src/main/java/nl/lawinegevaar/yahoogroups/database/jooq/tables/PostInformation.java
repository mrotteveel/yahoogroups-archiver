/*
 * This file is generated by jOOQ.
 */
package nl.lawinegevaar.yahoogroups.database.jooq.tables;


import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import nl.lawinegevaar.yahoogroups.database.jooq.DefaultSchema;
import nl.lawinegevaar.yahoogroups.database.jooq.tables.records.PostInformationRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row22;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PostInformation extends TableImpl<PostInformationRecord> {

    private static final long serialVersionUID = -1678884497;

    /**
     * The reference instance of <code>POST_INFORMATION</code>
     */
    public static final PostInformation POST_INFORMATION = new PostInformation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PostInformationRecord> getRecordType() {
        return PostInformationRecord.class;
    }

    /**
     * The column <code>POST_INFORMATION.GROUP_ID</code>.
     */
    public final TableField<PostInformationRecord, Integer> GROUP_ID = createField(DSL.name("GROUP_ID"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>POST_INFORMATION.MESSAGE_ID</code>.
     */
    public final TableField<PostInformationRecord, Integer> MESSAGE_ID = createField(DSL.name("MESSAGE_ID"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>POST_INFORMATION.GROUPNAME</code>.
     */
    public final TableField<PostInformationRecord, String> GROUPNAME = createField(DSL.name("GROUPNAME"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>POST_INFORMATION.POST_DATE</code>.
     */
    public final TableField<PostInformationRecord, LocalDateTime> POST_DATE = createField(DSL.name("POST_DATE"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>POST_INFORMATION.POST_YEAR</code>.
     */
    public final TableField<PostInformationRecord, Short> POST_YEAR = createField(DSL.name("POST_YEAR"), org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>POST_INFORMATION.POST_MONTH</code>.
     */
    public final TableField<PostInformationRecord, Short> POST_MONTH = createField(DSL.name("POST_MONTH"), org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>POST_INFORMATION.TOPIC_ID</code>.
     */
    public final TableField<PostInformationRecord, Integer> TOPIC_ID = createField(DSL.name("TOPIC_ID"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>POST_INFORMATION.TOPIC_YEAR</code>.
     */
    public final TableField<PostInformationRecord, Short> TOPIC_YEAR = createField(DSL.name("TOPIC_YEAR"), org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>POST_INFORMATION.TOPIC_MONTH</code>.
     */
    public final TableField<PostInformationRecord, Short> TOPIC_MONTH = createField(DSL.name("TOPIC_MONTH"), org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>POST_INFORMATION.PREV_IN_TOPIC</code>.
     */
    public final TableField<PostInformationRecord, Integer> PREV_IN_TOPIC = createField(DSL.name("PREV_IN_TOPIC"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>POST_INFORMATION.PREV_IN_TOPIC_YEAR</code>.
     */
    public final TableField<PostInformationRecord, Short> PREV_IN_TOPIC_YEAR = createField(DSL.name("PREV_IN_TOPIC_YEAR"), org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>POST_INFORMATION.PREV_IN_TOPIC_MONTH</code>.
     */
    public final TableField<PostInformationRecord, Short> PREV_IN_TOPIC_MONTH = createField(DSL.name("PREV_IN_TOPIC_MONTH"), org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>POST_INFORMATION.NEXT_IN_TOPIC</code>.
     */
    public final TableField<PostInformationRecord, Integer> NEXT_IN_TOPIC = createField(DSL.name("NEXT_IN_TOPIC"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>POST_INFORMATION.NEXT_IN_TOPIC_YEAR</code>.
     */
    public final TableField<PostInformationRecord, Short> NEXT_IN_TOPIC_YEAR = createField(DSL.name("NEXT_IN_TOPIC_YEAR"), org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>POST_INFORMATION.NEXT_IN_TOPIC_MONTH</code>.
     */
    public final TableField<PostInformationRecord, Short> NEXT_IN_TOPIC_MONTH = createField(DSL.name("NEXT_IN_TOPIC_MONTH"), org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>POST_INFORMATION.PREV_IN_TIME</code>.
     */
    public final TableField<PostInformationRecord, Integer> PREV_IN_TIME = createField(DSL.name("PREV_IN_TIME"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>POST_INFORMATION.PREV_IN_TIME_YEAR</code>.
     */
    public final TableField<PostInformationRecord, Short> PREV_IN_TIME_YEAR = createField(DSL.name("PREV_IN_TIME_YEAR"), org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>POST_INFORMATION.PREV_IN_TIME_MONTH</code>.
     */
    public final TableField<PostInformationRecord, Short> PREV_IN_TIME_MONTH = createField(DSL.name("PREV_IN_TIME_MONTH"), org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>POST_INFORMATION.NEXT_IN_TIME</code>.
     */
    public final TableField<PostInformationRecord, Integer> NEXT_IN_TIME = createField(DSL.name("NEXT_IN_TIME"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>POST_INFORMATION.NEXT_IN_TIME_YEAR</code>.
     */
    public final TableField<PostInformationRecord, Short> NEXT_IN_TIME_YEAR = createField(DSL.name("NEXT_IN_TIME_YEAR"), org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>POST_INFORMATION.NEXT_IN_TIME_MONTH</code>.
     */
    public final TableField<PostInformationRecord, Short> NEXT_IN_TIME_MONTH = createField(DSL.name("NEXT_IN_TIME_MONTH"), org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>POST_INFORMATION.MESSAGE_JSON</code>.
     */
    public final TableField<PostInformationRecord, String> MESSAGE_JSON = createField(DSL.name("MESSAGE_JSON"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>POST_INFORMATION</code> table reference
     */
    public PostInformation() {
        this(DSL.name("POST_INFORMATION"), null);
    }

    /**
     * Create an aliased <code>POST_INFORMATION</code> table reference
     */
    public PostInformation(String alias) {
        this(DSL.name(alias), POST_INFORMATION);
    }

    /**
     * Create an aliased <code>POST_INFORMATION</code> table reference
     */
    public PostInformation(Name alias) {
        this(alias, POST_INFORMATION);
    }

    private PostInformation(Name alias, Table<PostInformationRecord> aliased) {
        this(alias, aliased, null);
    }

    private PostInformation(Name alias, Table<PostInformationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> PostInformation(Table<O> child, ForeignKey<O, PostInformationRecord> key) {
        super(child, key, POST_INFORMATION);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public PostInformation as(String alias) {
        return new PostInformation(DSL.name(alias), this);
    }

    @Override
    public PostInformation as(Name alias) {
        return new PostInformation(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PostInformation rename(String name) {
        return new PostInformation(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PostInformation rename(Name name) {
        return new PostInformation(name, null);
    }

    // -------------------------------------------------------------------------
    // Row22 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row22<Integer, Integer, String, LocalDateTime, Short, Short, Integer, Short, Short, Integer, Short, Short, Integer, Short, Short, Integer, Short, Short, Integer, Short, Short, String> fieldsRow() {
        return (Row22) super.fieldsRow();
    }
}
